import smartpy as sp
class DepositVerifier(sp.Contract):
    
    @sp.entry_point
    def verify_deposit_4(self, params):
        sp.set_type(params.input, sp.TBigMap(sp.TInt, sp.TBls12_381_fr))
        vk_h = sp.bls12_381_g2("0x110ad443ea4065e1bc4ffd9e5aab19d7dab08bcee22f3755d2ff2c763e2006b2ec763d26d59e9eed35fcb94ca01965600d894eed57a1cfdf8b7df0e2b862371eae9ab2310bd02752060e133c5c56a396613f242f5cd90f596b354dd0dcafd7c507347642ffd023b12b73eaa65e35079b1471f6fb50d1a4ed0d9e4f377664bd78ba5f2735facc8cfe0186a9f0635a42001007c535562047538c46bf68d550e17911cf64c0c20d97970c0b32154c0b4c79f33c19e196dcf76037fba24cd1ce84f8")
        vk_g_alpha = sp.bls12_381_g1("0x123b091bd6d11f04c46cb409a72b2cc64938c1289d0e3e6c1be75c835c4aec179a52876140fb66016a47609086b01e68101598f8789e12a67a1027ba472dc6f056813cf61317f14af793152012f7ab94c46f3c370c7b106727934bca11aa43e4")
        vk_h_beta = sp.bls12_381_g2("0x0f178681b57d6502f689df757e39045e4028ca854aeb14779c25245aee2c86fa4e1475a682035e86b97feecb70831c660b032c5363042088f039564ee0751f298632dd8792b1a952e84df484ea334b2885f1b9fee2e199e450c32d7e9e34005b0aab007e0e9ff6cabd4d828b1f7812fbc686a5a5d0b6a19d5f7bc4d4868950a9db438e551bd81b96e47413659e74370c04b76f8f138064bdc03eb563167d310a5bc46269f614796d7b93734f414891ec81121672af8303054069c494c93fe92f")
        vk_g_gamma = sp.bls12_381_g1("0x0774740fa79ec5a2f1b6accf55cbf3f83db4b96f960bae7acabd5d9c5c1374472fd3eb7a9115053f7207dc31f361dccb19ac8650a30b05db3437092bca2f09203884344816799fd523b333e39c953bad1c7eb945c3a150e3073806dd90f8f0fd")
        vk_h_gamma = sp.bls12_381_g2("0x110ad443ea4065e1bc4ffd9e5aab19d7dab08bcee22f3755d2ff2c763e2006b2ec763d26d59e9eed35fcb94ca01965600d894eed57a1cfdf8b7df0e2b862371eae9ab2310bd02752060e133c5c56a396613f242f5cd90f596b354dd0dcafd7c507347642ffd023b12b73eaa65e35079b1471f6fb50d1a4ed0d9e4f377664bd78ba5f2735facc8cfe0186a9f0635a42001007c535562047538c46bf68d550e17911cf64c0c20d97970c0b32154c0b4c79f33c19e196dcf76037fba24cd1ce84f8")
        vk_query_not_local = {
			0: sp.bls12_381_g1("0x146ef8c9a1c7d4adf883d7b2ca1fc19e385870e139c44cedd12ced4ecf055e879fadc0be2cdc18a7d3b3a63929935b500718e1b48cea9bdb92859108680fd519ed0c43bdc0bb7a562e55b967f940948d0e438eabe162514fd953d7b7a91f03ac"),
			1: sp.bls12_381_g1("0x009a1d1a3ca0cd1760eb53bfe9d6103ca601c7f23e2af5b3b5df9401ef1d7d6ea203b2ec4c7414a79fda98daaed2bc1302eb4ee32e472d991709aa3e872663792be92cf146f3139bb0865e48ab2f22596814a781e7654fa5aae74f1c26630fb0"),
			2: sp.bls12_381_g1("0x0d9618bed34fafba2451f91f2fff5b7d3bacfa504c4be96cb72a1e1ec833e4c3cbdbdcfa428f78bb5eb31e35f8c50c440fd2e081b6691e15d949adc345f4a0cd2439651d80e55ccab958bfbc3dd9e9c8d487746ef0e2a43eb854df777c461edc"),
			3: sp.bls12_381_g1("0x1854f6f4b9b336d29a099e05fb9eff1acdfe35eef0b678edc22d53a37fbbf29ec9167534a41457c2a139f9a44785e3260bddaabd869853271eddf53a0f220e97a47d6d9a5089bb608f4afc76af9cb21321577d6a6c8ee8f074950a10b4aeb948"),
			4: sp.bls12_381_g1("0x07dfd9cf9da1d8940b082d6337fff846062793ac41527298cea211676699c282fe51091cea407150858978396371151717ae1f0867171f58e146f39d97004fc021399ecbd1d4e6cd2e3083be99340c124f39fffce88d101cd342a70e7650e739"),
			5: sp.bls12_381_g1("0x15f9d20626a9a7ed0811639deffae63e7435e85e045942e16a3ffbaf79ed891f925f391306bcdb3e72fa6c08a16759c305704d436374255f8f2ca9da3929ea2b027a99721fd9f02f6e5b5f3a45e69677e382485de32898a7922ba89c16773193"),
			6: sp.bls12_381_g1("0x115ad469d8e77026893fad394a6b297b4707fb833ebe39cd85f485eb76cdfd77f65c2e45f241aac8337f9534d2166dfe0d360df718a29de9c9c5f160265280203db67f932e0ba0957020d6c91e971a444c489df0c6b810e775a01d63189c0ec7"),
			7: sp.bls12_381_g1("0x13515ea4c19474a63ff90168406492b38dc0f58d9caaf9c305f7b48190ca999751a3a4651ae479545a99210e1ceb24c6164ce8245ed40ede9f8340284735ed0fef76384ea00a6727f1ac8af0cfae5b11dca953001cef8c34669322924a854a0d"),
			8: sp.bls12_381_g1("0x0ab8ddf9a022b7b832905b545191768f64f6793d1f1b9f560abd35567fc524c6b2ef16e7038ad94819c17650e1c1c1690829957b73858f9ef8a999672a7edf6cdddbde0b6c7509a50065c44d54da500d06fd6975eca237c7f12f3d9e8b3b2c04"),
			9: sp.bls12_381_g1("0x12611a86dcb8686aba495e8ccccebe85de6ae77a25f04d1fc076dc9047a82f11ac3832691c55d4f1aec137b9fac9879914c96ae5998039b0d5cb9ea26bdad0a3dd2aef2e0749eff743812e36a1c31ac2f8d8a2adc1c110626c0e9ea34de1e5ed"),
			10: sp.bls12_381_g1("0x1770cc171bf7343ee3c377ee8ce7e8d8d79a259805621c7f2d6f855083d7e5e8ae2ea6c88f0706779f2291f1f5cf5464018cb2a42c1b853105ef5a58b15a54f8c4021bb8dde451f247d2b38e2abe88f3b6dad67d1d29da55caf2e12f310854cf"),
			11: sp.bls12_381_g1("0x0886caf4bd1f8123e9a42fb5c03a8a87d34fcb14eb2029a435a30110139e692498a553fb846809d36364f50ebc47abab0250b8a967306be89ebdede5af68dc4d32124b6a720d867c10fddd8df8ca1b03d1501a1faa786bcbbd518deda4d55ee0"),
			12: sp.bls12_381_g1("0x11a8309963d06eca0715c43a7876d65540853f175cea7ae982a7ce20a2fc0295c10707d2dcff58d059bdda4da9692f900f3c01ad0874684d3591703b40d8d2bf50957af4db784609e55d254c432b567f7e688b3db52a9db1e8641284bc97d143"),
			13: sp.bls12_381_g1("0x12172626313c0da2ef92d788b71763561fb9ea20974102df1d9ae31a01b5250339e5cfbae98c26eb12842b1ba072e1d6172d644d4cc3a8d8c085959f8ccfba47659c0bfe2b402bd37207dc56a26dc6e453fa7834f1b4e2158039cb91c789cf84"),
			14: sp.bls12_381_g1("0x0612cb41028a7d742a74f304116caf86a5448be4804b31ea71f2367575ee66f7ff441630ca77572ad0fd00d7c8822b8d0b2d9b24c536c0312a1c73c1ef18978e397614605ea0fea9706e51e8d7d1af5993b5970f546aaf5550fc27aee442c0d6"),
			15: sp.bls12_381_g1("0x0737069432d02f527682e25623ea800deba7c1b44ea85629ab0edf5cfbeaaea6f29cb32ef23b9452c92799c08eb74a0b17fd62ce8d8c67e5a21579b30738efeba1fcd3a00c4159255353545ad7c0f7a1230d7f955b2a2097fe9f0e28f5412694"),
			16: sp.bls12_381_g1("0x0331189dada5cc81327f7f0fbff0106a3530dacc432c556938e2948a34eb2336ee5713d14be90ecc90795856ca51b83a105d08a5159ec85a1d735e6db653f94935132ff6dc46344c573190fe964da7b8eb04cda5e98c8d3c5c894ef64120b291"),
			17: sp.bls12_381_g1("0x0ede5ac46e13a9d677e19950e73838d3a6edb9e981f506acca01682197e58ab3fb4be5f98802922eda56bfe9c235254003c99fffe95d86e0f2b26aba4d6c3d54183362fbaa0580bb9176ae3aa109c36dd7917b34a6a7e0e641b58e76d581ba1d"),
			18: sp.bls12_381_g1("0x10e9d2f7552f9148f101479a33a88718a24c7ac594225c67decaa3767490948944bd6effdf16c6f1a682e53f77ae7d31072f3d8100888d4f49e217965023dee5f9116d086077c54ceb19ee4b792682fe73bfdd0980218c013a675fa1d5eff11d"),
			19: sp.bls12_381_g1("0x04ab8b06a4cd24674fff7295b82ffd62b1fa441437e167693b02e4a6a864810478dde15ea343d0be27b930bc0d3c30c216c190bae2f38356a42b5fc9caf8cfb5c6cd5bcd31348fac474b6af17ecc84f9e150e9ca7a07b9427c2a56e4e58f3e73"),
			20: sp.bls12_381_g1("0x069c4972a2b36916d20e7a3626898f9aad5214dd3b9208fdb0d657f1f895c0a06b55cb7ab2c0f321b10b3da900debec50644d811324dedf3644d5cb40e2ec4d3c57fcd8b546fb0b8c266b96b7f145c38e3443fd2ab0dfd752ad6e9569524e11e"),
			21: sp.bls12_381_g1("0x05b483c4eb3cbf7529b80b8c2d4e2906338b43a5705cd4474a3607f7cbce78f840e1dad342e3627aabbadb0a729d7c9413e0cf94542673b13daa551df14aac126c7cbea191faa93c6db85fb27ade11644aac23c264b51ca9ecdcccef3d5fd4e7"),
			22: sp.bls12_381_g1("0x14147cc3569822654eb864fa1c3abdcb81d15146796aa00b05aa5b43ea8b800668559beb75f8343bcba69e9e0c8735330ab388f5567cbfcc1486743ff03b486376ee8492fb3f1fbf2737fe1d8eab5041f35c87619d47b95065fe09fe7408876b"),
			23: sp.bls12_381_g1("0x18722d3f1fcba30584161195e27a91b93efec8876fafb6461549ac8390adc1819e12d2f88e438ee8dd3f5afb172336e617e735b36b013cfa6ceba2eade17f8420381251ffda32de56f8522023f27ddafd4b1791377c89fd5a01cb5a9abf66479"),
			24: sp.bls12_381_g1("0x100bea91d76fdd36a147dcddb869ce4a71845cbe81a6a0803d9bc6225f8d4e982b9e3e7fdf4c78e278d07fab49eba1ee09877a4cce4ce0c29cde2473d27f7c9af732ee45558d0d0eed33cdc38237a89346aa5a429b17776bc6875457849ebbc6")
		}
        
        vk_query = sp.local('vk_query', vk_query_not_local)

        vk_x_not_local  = sp.mul(vk_query.value[1], params.input[0]) 
        vk_x = sp.local('vk_x', vk_x_not_local)
        
        # sp.range(x, y) goes from x (inclusive) to y (exclusive)
        sp.for i in sp.range(1, sp.len(vk_query.value) - 1):
            vk_x.value = vk_x.value + sp.mul(vk_query.value[ i + 1], params.input[i])

        vk_x.value = vk_x.value + vk_query.value[0]     

        list_pair1 = sp.list([
            sp.pair(vk_g_alpha,vk_h_beta),
            sp.pair(vk_x.value,vk_h_gamma),
            sp.pair(params.proof_c,vk_h),
            sp.pair(- (params.proof_a+vk_g_alpha),params.proof_b+vk_h_beta)
        ])

        list_pair2 = sp.list([
            sp.pair(params.proof_a,vk_h_gamma),
            sp.pair(- vk_g_gamma,params.proof_b)
        ])

        check1 = sp.pairing_check(list_pair1)
        check2 = sp.pairing_check(list_pair2)
        sp.if check1 != True:
            sp.failwith("The proof is not valid, check1 failed")
        sp.if check2 != True:
            sp.failwith("The proof is not valid, check2 failed")

sp.add_compilation_target("DepositVerifier", DepositVerifier())
