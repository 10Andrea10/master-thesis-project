import smartpy as sp
class WithdrawVerifier(sp.Contract):
    
    @sp.entry_point
    def verify_withdraw_4(self, params):
        sp.set_type(params.input, sp.TBigMap(sp.TInt, sp.TBls12_381_fr))
        vk_h = sp.bls12_381_g2("0x0e4de4fba2c814851eeba40b3fd1e032f8561eaa9e155eed635d5e61758867a06fe9397628b557bb492a07aed149b312160ebde63aaa3602fbe17ad96fc917092ea9c7420a6063d45d368777f3df6ded0b00b348678bef366b00261a3b5e2b4717f27cedd8aa3721e6b79a1172a23a9b0d3f1c77f894ef97f07b02b52aad05595ce488ff3d400caf27e6f0864f553af910e250f2135a1632363f892d5250d151fbbdc6d22d9b8b1fcae936d21cc83f318a6797dd838ec0fdf00a1377c5edd3df")
        vk_g_alpha = sp.bls12_381_g1("0x16d7b0f21b44f29079668628eef3cf77cb5c1889ae642f65596b4f2c10ed85e0ea28d267d8ddded57e5e811d6f5b3c64014554ea09027fac11159a73d69896470411ff77a94c24b7668154d1bef67ed443392263b39ebe2c013208da8bd1beb9")
        vk_h_beta = sp.bls12_381_g2("0x1542eb992b5cd429425e4743409715f357eea8d1ba4f29e4b3d5eb0022a4848bf46eb8149fe7feebbe09a6e49b36b3060b33ab8c5939b6056ea5aa03ad77f3819e7535eb9ac86eeadc4c1491b6a6299ed9622cf8f4fcc23dd8356b9f8767507d02c987c2a6cef79bfe222802fc74c599e32907c749a43c1628b796967d5400ea4f0d864752dd529df02b0582f3759c430eb409dde74fd482d3642ed064b173fb570e1f2d1fff49ab81f80696ffbd969385149bb31c3fe8e8428b83b8b91dc479")
        vk_g_gamma = sp.bls12_381_g1("0x17006514c5a967088011c1752bdc5ae6e61287ad146e54ee0d52f3cfec797352283f02e07bc9ec6486ff08505149e45b0771a67422cb8e4c75c91954612f212ec5d1c9ddbc3ddfb32495448545340d291511f9a711594986a3c203869ba0627f")
        vk_h_gamma = sp.bls12_381_g2("0x0e4de4fba2c814851eeba40b3fd1e032f8561eaa9e155eed635d5e61758867a06fe9397628b557bb492a07aed149b312160ebde63aaa3602fbe17ad96fc917092ea9c7420a6063d45d368777f3df6ded0b00b348678bef366b00261a3b5e2b4717f27cedd8aa3721e6b79a1172a23a9b0d3f1c77f894ef97f07b02b52aad05595ce488ff3d400caf27e6f0864f553af910e250f2135a1632363f892d5250d151fbbdc6d22d9b8b1fcae936d21cc83f318a6797dd838ec0fdf00a1377c5edd3df")
        vk_query_not_local = {
			0: sp.bls12_381_g1("0x00f3c42396f359cf23ad366dcabc22b69e3abe1b877030214d343cfcb494f51f8aef734fc08d86615c48d467577084e211f05612593595a5771c41ffb07327761544e00196867eed56e5d7ac9355106056e1e0c448b0aa3aa6a194d1639fe8ff"),
			1: sp.bls12_381_g1("0x02bae390f980ba002959d92ac409823dae8506b35d8d01d1c2518230c3389b6d6cda66f1b725e91d19cc6fbbb78928690c1f9952a79a7cce0a5e2f701c6f5e01d3edc3c1e634df8b151fdac82db0c006f82bac3720136ae589e5bb9a8b1c2593"),
			2: sp.bls12_381_g1("0x031e61f8ebf74755b998f8f8d75ac2e993a8de7b16c13a95c8728404027364b320d9f27f4504faea8acf1e7e6137a6990d17b19fc73fb63b0ef3f299a9967e2ab86caa0a73bef8824a2d0063f2ad23546afd261829db4320d235a276209fc511"),
			3: sp.bls12_381_g1("0x0ef40d4237590be4ee3029cc9eb1ef6bd5b843c6b199353543b6a2a91d6ea659b67ce389ea99155393ab1c588b34b6af16ce183310c5ceb8dadc922b030f80436132e22a4ef2ce27c126aec1f9f7877daf3e94240d223d383f4a116c3db7999a"),
			4: sp.bls12_381_g1("0x0c409b20acd04cc02738e861610914177ab19250076dc552feea4449c48f51b047b099a2e16940fc2d0faf17cfa9c04e02fa23d09201fb5baea3760116d20dc60ff62f6a086b378b7de58843116af25cb7e8c40b3eb65e1970dca04fe3c6aeff"),
			5: sp.bls12_381_g1("0x101f37ce146f6950a6414bcb9cdc245b69c16d8a2509ddf9d76bd00851daf8ffaffaf3ec33df5c32eb81cf8b5e2da9ee09f27445ebdac56d45a5d94f49eb8da4bceee464a1dae63928f289163f6d6fe3c16109630326707b0cf3f36cfc2491c0"),
			6: sp.bls12_381_g1("0x04b1b669ffaedcb440a5cf5be2432eba96a6513bb05bd9efae86c266498fe16ab4a8dda69e7b2f3784e8114025c438d113772c03efd8f8b5de3de7fe3db898f8e32bd29f91dee62a8a917e2cb89df66884c4e41ee0163590c41cceabf7bb3822"),
			7: sp.bls12_381_g1("0x03509ff7bc93be0311ceaac0b1ce0e58a526113112734bbebc8fb89130c52ba8c6560d8b85704d4126adc8effa2b274b06fd059a96d82c0b991b8d2ca81781a571a91acf26aff5fc3e2796fcfb292cb0ba8b4ff468e1d8bfbd053e4e94267820"),
			8: sp.bls12_381_g1("0x0e7d9058668040be724e00f71965f0b06c7ee39ad504d3ffe985bbed096de23f9e16126dac78942de609354121fb0cbe130f1788e99406a52a306e2cfa9a99cff63bca3fe3063122e0645838b11893942411fd3520e5fa75818861090258ee98"),
			9: sp.bls12_381_g1("0x00634f2866234d0cc1e7c0dd17d018c02a00be2ac1acc7c512d99276cb901081d9a0a8ae836116eb48994fddb4a487ea0ed33f97cbe5e6a71aec9c7133875d5af3588e535799a9107ef6b4a530b799fb5ab695a68026c0b87729ec4c426fb9cb"),
			10: sp.bls12_381_g1("0x1821087b8957645b54d1540e27556136b8bcb142abdc190d780830e423cfd6fa017ddf947adde9bb526a2eb2fb46b3f115cbd717f8b6c527900e39d821a4d99908b149d01338af394279941d5b2b25dd58cd8ef865cbde71575c36d819bd9939"),
			11: sp.bls12_381_g1("0x01538772895d82adf56c5656c091269e2e57e62f9e37f34b041812c6e9f1735f7b0b3710c037a0909f846b156277b9de0fc0f4e7001c8279b075c0831369a1bee10861af98bba7a05443b7c2fb98ffa95eac37ae2fc5d415108c0a3b8c12b7b2"),
			12: sp.bls12_381_g1("0x18d5aace3cc0c741f62c064960b4273555032081ce541dedd365f83e5baeb3780e01a398b530ebc368c2f223b284a208136754547bfdc86ded514869b6bbcffa87c47f4dd67d847352679ec7e8c3b88f521702fae1b6714596da00752f83f008"),
			13: sp.bls12_381_g1("0x0f58b5061eb1ecfab82472c5d452e4e154add2d6c345e4c08f9eba3f8b9327d6572f9132567fca4b17c7535f23b489ec0122b9691077590cf38aa52e3d045b272b46a8c227c36dbcee7fe125be8a2adbee58171d57ec61519ddff322bad4fe88"),
			14: sp.bls12_381_g1("0x0fdd5e85d24bdcd8ef2b76aee2077fc418a4a3643bd50331a5c15435657b14c6384867e6b8a55d3f90b04b2cf5a766390b4185f371768aad8207f3cc38eae4776d3f7e458915b0743540c7193326e7a1e4ef3c41f4987befbec4b01a4652cef0"),
			15: sp.bls12_381_g1("0x0dd66012488d380b8b6f6078c05c4275c7b424223129999f34f4040817e4dada87eaf9463b1070891ec746ce2d35274c15fa25e93886b20c84f8dc2a2065d40214edc6a58a6e4932bb477ddf64ee18f16802d223c3ab3e779d640cc94f9c7aac"),
			16: sp.bls12_381_g1("0x0ec7f0dc44c873419ad776d83fac2e0f86f4d3c7ee946178d2aa82c65d958795fd9bb61ac74c7b5e396303b0d2e18d291718dda4c51a82fc308479764fc4def2afdba17686ceec14786a68b4f4bc8c04f58883039aa87b4d2f6dc3843ecf77f6"),
			17: sp.bls12_381_g1("0x0701717e753aab71ce1f52dea5a439c9bde712b1ff983ae85f1e0e0e255b727bbad6ada1949b7aa2e043e1e75a78f85a0995ee7fda4ec319f8a226fcd49ed7065c3cc0021c614573e12fb7435de8367f70d0c688804ef4a41b4c122a2fe7b849"),
			18: sp.bls12_381_g1("0x1196be5567a9ab043dc9227ead2b81b1994217edbb81117e0c7e18c9058ec692ff3c8422c4b689afe54543ba97b98778066e7ed4f141e6e81e3727b5434d4fc4ff49368518ac10dadc1bfc3a9bc12a480245e06ba39af872dda702d4165f532b"),
			19: sp.bls12_381_g1("0x07200730221b3289457c94a2ca2bbf0d055eef3718b0baec9141889f82f9e80b86b24d29b351c8ba7f743e0efbe118550c99599ebf1662244b6f6b1dea3e66dcc819d74dfffa6ab4b279440151fa6f5cc9f40eb0d91377d9feb382b02a6ac8b0"),
			20: sp.bls12_381_g1("0x12c1e6738e8346a0266c9b8d3ff7d696657ec5a24eba488e3542e35b620691e0e996f2102a0f488f184246d78d000a4d0b80e05bbbde438a06ae0662bb9389830fce603754d099d5234d1253bf95cd0abbaea2ae07a46ba49a597adf170e3b34"),
			21: sp.bls12_381_g1("0x164bc3aace1e11ea7a1468352f0d04673b864bb410eb70aee5cafdbc4f60dedbc35d47c673c4663072b769ec0de806440a433ba8a75003fcb2c79bbdcdf7b43c5b3fc4f6d67c737130ecc13e57b2b3a051086cadaeae4e0a12f395202fa99dd5"),
			22: sp.bls12_381_g1("0x14e3d23a6782180e155e969aabf84311972029d876047752250235db5eef944bf411a96c0ad84d616667fb31c5cff95b0bb69762a694ca9c9036ddcaee91ba3e09006c18a3efc03b907c834ca204573e62c5e870e3aa681135bb71b9464ffc4f"),
			23: sp.bls12_381_g1("0x042b58f1f31ca5173699c26f0e7fe1b518c7812e36f136765a82c2519d535d9a9f93b6e85abc1f3b7f7a05f91852da8116dea570fb96eaddb7817e9603b969cc73d3d96136842ecbf972dfba36f0ae0d3a554ff5cf86f09888fda8677bb41b76"),
			24: sp.bls12_381_g1("0x01614127f78149ca1ccdcf0b7e53a153b6f29dea94938430d4d8cb7985d2f71cfb23b3a004b416567efb374a11449b110876138073cb0c0f6fefe84fd55b79482e1768d465457a793c85f6ecd983619990de53f8c139eae7a787b5863bd0ff69"),
			25: sp.bls12_381_g1("0x181ba31acb62de9429db1a1a43b742ade9fc204a874416b86277bb489c7d1896d1454952b39c55cea9d1d381397fb21103c7a53b35ff73a295d2d6543b343e080fab86ed7322f6bf305d763b72c7b90a36d32b8f1d948226abfde73f47e4324a"),
			26: sp.bls12_381_g1("0x078915b1d43c72595d411609dc996da7123bdfc8fa827148be5ab92c7b088bd92574020862ebf2761ace7670ed8d3e8800f51787879acd3b65669e669df5c8fdc0aed37350cec86f41642d31445012321e72aa7b68e253a6f259b9cbbce3ab6e")
		}
        
        vk_query = sp.local('vk_query', vk_query_not_local)

        vk_x_not_local  = sp.mul(vk_query.value[1], params.input[0]) 
        vk_x = sp.local('vk_x', vk_x_not_local)
        
        # sp.range(x, y) goes from x (inclusive) to y (exclusive)
        sp.for i in sp.range(1, sp.len(vk_query.value) - 1):
            vk_x.value = vk_x.value + sp.mul(vk_query.value[ i + 1], params.input[i])

        vk_x.value = vk_x.value + vk_query.value[0]     

        list_pair1 = sp.list([
            sp.pair(vk_g_alpha,vk_h_beta),
            sp.pair(vk_x.value,vk_h_gamma),
            sp.pair(params.proof_c,vk_h),
            sp.pair(- (params.proof_a+vk_g_alpha),params.proof_b+vk_h_beta)
        ])

        list_pair2 = sp.list([
            sp.pair(params.proof_a,vk_h_gamma),
            sp.pair(- vk_g_gamma,params.proof_b)
        ])

        check1 = sp.pairing_check(list_pair1)
        check2 = sp.pairing_check(list_pair2)
        sp.if check1 != True:
            sp.failwith("The proof is not valid, check1 failed")
        sp.if check2 != True:
            sp.failwith("The proof is not valid, check2 failed")

sp.add_compilation_target("WithdrawVerifier", WithdrawVerifier())
