// example taken from zokrates documentation https://github.com/Zokrates/ZoKrates/blob/deploy/zokrates_cli/examples/merkleTree/sha256PathProof3.zok
import "hashes/sha256/512bitPadded" as hash;
import "utils/casts/field_to_u32";

def generateMerkleTree<LEAFS_NUM>(u32[LEAFS_NUM][8] leafs, u32 tree_depth) -> u32[8] {

	// assert that LEAFS_NUM is a power of 2
	assert(field_to_u32(2 ** tree_depth) == LEAFS_NUM);

	u32[LEAFS_NUM][8] mut merkleTree = leafs;

	for u32 i in 0..tree_depth {
		// old line not working with zokrates 0.8.7
		// u32 step_size = field_to_u32(2 ** (i + 1));
		u32 step_size = 1 << (i + 1);
		u32 step_number = (LEAFS_NUM / step_size);
		for u32 j in  0..step_number {
			u32 leftIndex = j * step_size;
			u32 rightIndex = leftIndex + step_size / 2;
			merkleTree[leftIndex] = hash(merkleTree[leftIndex], merkleTree[rightIndex]);  
		}
	}

    return merkleTree[0];
}
